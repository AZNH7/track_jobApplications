version: '3.8'

services:
  # Main Application Service
  job-tracker:
    build:
      context: ..
      dockerfile: app/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=0
    container_name: track_jobapplication-app
    # Use bridge network instead of host for Windows compatibility
    networks:
      - track_jobapplication-network
    environment:
      - PYTHONPATH=/app/src
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-jobtracker}
      - DB_USER=${POSTGRES_USER:-jobtracker}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-jobtracker_password}
      - OLLAMA_HOST=${OLLAMA_HOST:-http://host.docker.internal:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3:8b}
      - FLARESOLVERR_URL=http://flaresolverr-balancer:8190/v1
      - STREAMLIT_SERVER_FILEWATCHER_ENABLED=false
      - STREAMLIT_SERVER_MAX_UPLOAD_SIZE=1024
      - STREAMLIT_SERVER_WORKERS=8
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - STREAMLIT_LAYOUT_WIDE=true
      - STREAMLIT_THEME_BASE=light
    ports:
      - "8501:8501"
    volumes:
      - ../shared:/app/shared
      - ../exports:/app/exports
      - ../imports:/app/imports
      - ../logs:/app/logs
    depends_on:
      - postgres
      - redis
      - flaresolverr-balancer
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Database Service
  postgres:
    image: postgres:16
    container_name: track_jobapplication-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-jobtracker}
      - POSTGRES_USER=${POSTGRES_USER:-jobtracker}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-jobtracker_password}
    volumes:
      - track_jobapplication_postgres_data:/var/lib/postgresql/data
      - ../shared/postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - track_jobapplication-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobtracker -d jobtracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: track_jobapplication-redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - track_jobapplication_redis_data:/data
    networks:
      - track_jobapplication-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Simplified FlareSolverr setup for Windows
  flaresolverr:
    image: 21hsmw/flaresolverr:nodriver
    container_name: track_jobapplication-flaresolverr
    ports:
      - "8190:8191"
    networks:
      - track_jobapplication-network
    restart: unless-stopped
    environment:
      - LOG_LEVEL=info
    shm_size: '2gb'
    cap_add:
      - SYS_ADMIN

volumes:
  track_jobapplication_postgres_data:
  track_jobapplication_redis_data:

networks:
  track_jobapplication-network:
    driver: bridge
