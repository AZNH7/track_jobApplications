

services:
  # Main Application Service
  job-tracker:
    build:
      context: ..
      dockerfile: app/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=0
    container_name: track_jobapplication-app
    # Use bridge network with proper port mapping
    networks:
      - track_jobapplication-network
    # env_file:
    #   - ../.env
    environment:
      - PYTHONPATH=/app/src
      - DB_HOST=${POSTGRES_HOST:-postgres}
      - DB_PORT=${POSTGRES_PORT:-5432}
      - DB_NAME=${POSTGRES_DB:-jobtracker}
      - DB_USER=${POSTGRES_USER:-jobtracker}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-jobtracker_password}
      # Ollama configuration - automatically resolves to host machine
      # Users can override with: OLLAMA_HOST=http://your-host-ip:11434
      - OLLAMA_HOST=${OLLAMA_HOST:-http://host.docker.internal:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3:8b}
      - FLARESOLVERR_URL=http://flaresolverr-balancer:8190/v1
      - STREAMLIT_SERVER_FILEWATCHER_ENABLED=false
      - STREAMLIT_SERVER_MAX_UPLOAD_SIZE=1024
      - STREAMLIT_SERVER_WORKERS=8
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - STREAMLIT_LAYOUT_WIDE=true
      - STREAMLIT_THEME_BASE=light
    ports:
      - "8501:8501"
    volumes:
      - ../shared:/app/shared
      # - ./src:/app/src  # Commented out to use built-in src from Docker image
      - ../exports:/app/exports
      - ../imports:/app/imports
      - ../logs:/app/logs
    depends_on:
      - postgres
      - redis
      - flaresolverr-balancer
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database Service
  postgres:
    image: postgres:16
    container_name: track_jobapplication-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-jobtracker}
      - POSTGRES_USER=${POSTGRES_USER:-jobtracker}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-jobtracker_password}
    volumes:
      - track_jobapplication_postgres_data:/var/lib/postgresql/data
      - ../shared/postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - track_jobapplication-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobtracker -d jobtracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: track_jobapplication-redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - track_jobapplication_redis_data:/data
    networks:
      - track_jobapplication-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  flaresolverr-1:
    image: 21hsmw/flaresolverr:nodriver
    container_name: track_jobapplication-flaresolverr-1
    ports:
      - "8191:8191"
    networks:
      - track_jobapplication-network
    restart: unless-stopped
    environment:
      - LOG_LEVEL=info
    shm_size: '2gb'
    cap_add:
      - SYS_ADMIN

  flaresolverr-2:
    image: 21hsmw/flaresolverr:nodriver
    container_name: track_jobapplication-flaresolverr-2
    ports:
      - "8192:8191"
    networks:
      - track_jobapplication-network
    restart: unless-stopped
    environment:
      - LOG_LEVEL=info
    shm_size: '2gb'
    cap_add:
      - SYS_ADMIN

  flaresolverr-3:
    image: 21hsmw/flaresolverr:nodriver
    container_name: track_jobapplication-flaresolverr-3
    ports:
      - "8193:8191"
    networks:
      - track_jobapplication-network
    restart: unless-stopped
    environment:
      - LOG_LEVEL=info
    shm_size: '2gb'
    cap_add:
      - SYS_ADMIN

  flaresolverr-4:
    image: 21hsmw/flaresolverr:nodriver
    container_name: track_jobapplication-flaresolverr-4
    ports:
      - "8194:8191"
    networks:
      - track_jobapplication-network
    restart: unless-stopped
    environment:
      - LOG_LEVEL=info
    shm_size: '2gb'
    cap_add:
      - SYS_ADMIN

  flaresolverr-5:
    image: 21hsmw/flaresolverr:nodriver
    container_name: track_jobapplication-flaresolverr-5
    ports:
      - "8195:8191"
    networks:
      - track_jobapplication-network
    restart: unless-stopped
    environment:
      - LOG_LEVEL=info
    shm_size: '2gb'
    cap_add:
      - SYS_ADMIN



  flaresolverr-balancer:
    image: nginx:alpine
    container_name: track_jobapplication-flaresolverr-balancer
    volumes:
      - ./nginx-flaresolverr.conf:/etc/nginx/nginx.conf:ro
      - ./disable-ipv6.sh:/disable-ipv6.sh:ro
    ports:
      - "8190:8190"
    networks:
      - track_jobapplication-network
    environment:
      - NGINX_DISABLE_IPV6=true
    entrypoint: ["/bin/sh", "/disable-ipv6.sh"]
    depends_on:
      - flaresolverr-1
      - flaresolverr-2
      - flaresolverr-3
      - flaresolverr-4
      - flaresolverr-5

volumes:
  track_jobapplication_postgres_data:
  track_jobapplication_redis_data:

networks:
  track_jobapplication-network:
    driver: bridge
